from kedro.pipeline import Pipeline, node

from .nodes import train_imp_AMA_model, train_imp_ramp_model
from ...data_science.nodes import *

from data_services.mlflow_utils import init_mlflow, init_mlflow_run
from data_services.network import copy_artifacts_to_ntx

def create_pipelines(**kwargs):
    impeded_ama_pipeline = Pipeline(
        [
            node(
                func=init_mlflow,
                inputs="params:imp_ama_model_params",
                outputs="experiment_id",
            ),
            node(
                func=init_mlflow_run,
                inputs=[
                    "params:imp_ama_model_params",
                    "experiment_id",
                ],
                outputs="active_run_id",
            ),
            node(
                func=train_imp_AMA_model,
                inputs=[
                    "aircraft_categories",
                    "imp_data_engred_filtered",
                    "params:imp_ama_model_params",
                    "params:globals",
                    "active_run_id",
                ],
                outputs="imp_model_pipeline",
            ),
            node(
                func=train_baseline,
                inputs=[
                    "imp_data_engred_filtered",
                    "params:imp_ama_model_params",
                    "active_run_id",
                ],
                outputs="baseline_pipeline",
            ),
            node(
                func=predict,
                inputs=[
                    "imp_model_pipeline",
                    "imp_data_engred_filtered",
                    "params:imp_ama_model_params",
                ],
                outputs="imp_data_predicted_m",
            ),
            node(
                func=predict_baseline,
                inputs=[
                    "baseline_pipeline",
                    "imp_data_predicted_m",
                    "params:imp_ama_model_params",
                ],
                outputs="imp_data_predicted",
            ),
            node(
                func=report_performance_metrics,
                inputs=[
                    "imp_data_predicted",
                    "params:imp_ama_model_params",
                    "active_run_id",
                ],
                outputs="artifacts_ready",
            ),
            node(
                func=log_model_sample_data,
                inputs=[
                    'imp_data_engred_filtered',
                    'params:imp_ama_model_params',
                    'active_run_id',
                ],
                outputs=None,
                name='log_models_sample_data',
            ),
            node(
                func=copy_artifacts_to_ntx,
                inputs=[
                    "experiment_id",
                    "active_run_id",
                    "params:ntx_connection",
                    "artifacts_ready",
                ],
                outputs=None,
            )
        ]
    )

    impeded_ama_validation_pipeline = Pipeline(
        [
            node(
                func=init_mlflow,
                inputs="params:imp_ama_model_params",
                outputs="experiment_id",
            ),
            node(
                func=init_mlflow_run,
                inputs=[
                    "params:imp_ama_model_params",
                    "experiment_id",
                    "validate",
                ],
                outputs="active_run_id",
            ),
            node(
                func=load_imp_ama_mlflow_model,
                inputs=[
                    "params:globals",
                    "active_run_id",
                ],
                outputs="imp_model_pipeline",
            ),
            node(
                func=load_imp_ama_mlflow_baseline,
                inputs=[
                    "params:globals",
                    "params:imp_ama_model_params",
                    "active_run_id",
                ],
                outputs="baseline_pipeline",
            ),
            node(
                func=predict,
                inputs=[
                    "imp_model_pipeline",
                    "imp_data_engred_filtered",
                    "params:imp_ama_model_params",
                ],
                outputs="imp_data_predicted_m",
            ),
            node(
                func=predict_baseline,
                inputs=[
                    "baseline_pipeline",
                    "imp_data_predicted_m",
                    "params:imp_ama_model_params",
                ],
                outputs="imp_data_predicted",
            ),
            node(
                func=report_performance_metrics,
                inputs=[
                    "imp_data_predicted",
                    "params:imp_ama_model_params",
                    "active_run_id",
                ],
                outputs=None,
            )

        ]
    )
    
    impeded_ramp_pipeline = Pipeline(
        [
            node(
                func=init_mlflow,
                inputs="params:imp_ramp_model_params",
                outputs="experiment_id",
            ),
            node(
                func=init_mlflow_run,
                inputs=[
                    "params:imp_ramp_model_params",
                    "experiment_id",
                ],
                outputs="active_run_id",
            ),
            node(
                func=train_imp_ramp_model,
                inputs=[
                    "aircraft_categories",
                    "imp_data_engred_filtered",
                    "params:imp_ramp_model_params",
                    "params:globals",
                    "active_run_id",
                ],
                outputs="imp_model_pipeline",
            ),
            node(
                func=train_baseline,
                inputs=[
                    "imp_data_engred_filtered",
                    "params:imp_ramp_model_params",
                    "active_run_id",
                ],
                outputs="baseline_pipeline",
            ),
            node(
                func=predict,
                inputs=[
                    "imp_model_pipeline",
                    "imp_data_engred_filtered",
                    "params:imp_ramp_model_params",
                ],
                outputs="imp_data_predicted_m",
            ),
            node(
                func=predict_baseline,
                inputs=[
                    "baseline_pipeline",
                    "imp_data_predicted_m",
                    "params:imp_ramp_model_params",
                ],
                outputs="imp_data_predicted",
            ),
            node(
                func=report_performance_metrics,
                inputs=[
                    "imp_data_predicted",
                    "params:imp_ramp_model_params",
                    "active_run_id",
                ],
                outputs="artifacts_ready",
            ),
            node(
                func=log_model_sample_data,
                inputs=[
                    'imp_data_engred_filtered',
                    'params:imp_ramp_model_params',
                    'active_run_id',
                ],
                outputs=None,
                name='log_models_sample_data',
            ),
            node(
                func=copy_artifacts_to_ntx,
                inputs=[
                    "experiment_id",
                    "active_run_id",
                    "params:ntx_connection",
                    "artifacts_ready",
                ],
                outputs=None,
            )
        ]
    )

    impeded_ramp_validation_pipeline = Pipeline(
        [
            node(
                func=init_mlflow,
                inputs="params:imp_ramp_model_params",
                outputs="experiment_id",
            ),
            node(
                func=init_mlflow_run,
                inputs=[
                    "params:imp_ramp_model_params",
                    "experiment_id",
                    "validate",
                ],
                outputs="active_run_id",
            ),
            node(
                func=load_imp_ramp_mlflow_model,
                inputs=[
                    "params:globals",
                    "active_run_id",
                ],
                outputs="imp_model_pipeline",
            ),
            node(
                func=load_imp_ramp_mlflow_baseline,
                inputs=[
                    "params:globals",
                    "params:imp_ramp_model_params",
                    "active_run_id",
                ],
                outputs="baseline_pipeline",
            ),
            node(
                func=predict,
                inputs=[
                    "imp_model_pipeline",
                    "imp_data_engred_filtered",
                    "params:imp_ramp_model_params",
                ],
                outputs="imp_data_predicted_m",
            ),
            node(
                func=predict_baseline,
                inputs=[
                    "baseline_pipeline",
                    "imp_data_predicted_m",
                    "params:imp_ramp_model_params",
                ],
                outputs="imp_data_predicted",
            ),
            node(
                func=report_performance_metrics,
                inputs=[
                    "imp_data_predicted",
                    "params:imp_ramp_model_params",
                    "active_run_id",
                ],
                outputs=None,
            )

        ]
    )
    
    return {
        'imp_ama': impeded_ama_pipeline,
        'imp_ama_validation': impeded_ama_validation_pipeline,
        'imp_ramp': impeded_ramp_pipeline,
        'imp_ramp_validation': impeded_ramp_validation_pipeline
    }
